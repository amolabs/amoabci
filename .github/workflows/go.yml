name: build-deploy
on:
  push:
    tags:
    - 'v*'
jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set env var for RELEASE_VERSION
      run: echo "RELEASE_VERSION=${GITHUB_REF:10}" >> $GITHUB_ENV

    - name: Set env var for ASSET_amod
      run: echo "ASSET_amod=amod-${RELEASE_VERSION/v/''}-linux-x86_64.tar.gz" >> $GITHUB_ENV

    - name: Set env var for ASSET_docker_tag
      run: echo "ASSET_docker_tag=${RELEASE_VERSION/v/''}" >> $GITHUB_ENV

    - name: Unit Test
      run: make test

    - name: Build Binary Files
      run: make TARGET=linux build

    - name: Build Docker Image
      run: make docker

    - name: Wrap (amod)
      run: tar -czf ${{ env.ASSET_amod }} amod

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: ${{ env.RELEASE_VERSION }} release
          draft: true
          prerelease: false

    - name: Upload Release Asset (amod)
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.ASSET_amod }}
          asset_name: ${{ env.ASSET_amod }}
          asset_content_type: application/gzip

    - name: Access to Docker Hub
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} |
        docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

    - name: Tag Docker Image to ${{ env.ASSET_docker_tag }}
      run: |
        docker tag amolabs/amod:latest amolabs/amod:${{ env.ASSET_docker_tag }}

    - name: Publish Docker Image to Docker Hub
      run: |
        docker push amolabs/amod:latest
        docker push amolabs/amod:${{env.ASSET_docker_tag }}


